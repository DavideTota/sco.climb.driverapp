Generazione degli ID:

	L'ID dei nodi è lungo 16byte (128 bit) e solitamente viene espresso in formato esadecimale tipo: 3906BF230E2885338F44000120000016

	I 16 byte sono così composti:
	<climb namespace-10Byte><city code-2Byte><serie/school ID-1Byte><Short/Child ID-3Byte>

	Gli ID si possono generare tramite excel con il file ID_generator.xlsx. 
	- verificare/inserire il city code esadecimale (0001 è stato assegnato a Trento)
	- verificare/inserire l'id della serie esadecimale (da 20 in su, l'idea è di incrementare di uno ad ogni giro di programmazione)
	- inserire gli short ID decimali. Se necessario usare le funzioni di trascinamento per l'incremento automatico dello short it
	- L'id cacloclato è nella colonna FULL NODE ID (Hex)

Preparazione del file BeaconConfig.csv:
	Una volta generati gli ID si utilizza l'app BeaconConfig (presente nel repository di CLIMB*) per la programmazione.
	L'app utilizza il file BeaconConfig.csv presente in questa cartella per ottenere gli ID da programmare.
	Quindi si copiano (UTILIZZARE COPIA PER VALORI) i dati del file ID_generator.xlsx a BeaconConfig.csv, nello specifico:
		- la colonna A "short ID (dec)" di ID_generator.xlsx nella colonna B "NAME" di BeaconConfig.csv
		- la colonna B "FULL NODE ID (Hex)" di ID_generator.xlsx nella colonna H "UID/url" di BeaconConfig.csv
		- se necessario 'trascinare' le colonne in modo che tutte le colonne abbiano la stessa lunghezza
		- ATTENZIONE: nel trascinare le colonne, fare attenzione a NON INCREMENTARE I VALORI (la colonna A "Index" DEVE invecie essere incrementata).
	
Programmazione dei nodi:
	Installare l'app BeaconConfig* su un cellulare/tablet android (testati da android 5 a 8)
	Caricare il file BeaconConfig.csv preparato nel passaggio precedente nella memoria del dispositivo Android
	Aprire l'app BeaconConfig e cliccare su "FILE SELECT"
	Tramite file manager che si apre navigare fino a selezionare il file BeaconConfig.csv appena scaricato
	ATTENZIONE: NON SELEZIONARE IL FILE TRAMITE IL MENU "FILE RECENTI" MA USARE IL FILE MANAGER (il path che l'app ottiene dai file recenti non è valido)
	Per ogni nodo:
		- riavviare il beacon rimuovendo e poi inserendo la batteria
		- avviare la scansione nell'app BeaconConfig con il tasto in basso a destra
			- l'app integra un filtro sull'RSSI che può essere usato per scartare i dispositivi troppo lontani. L'elenco dei dispositivi è comunque ordinato con RSSI decrescente.
			- la funzione Auto Stop ferma automaticamente la scansione Bluetooth al primo dispositivo valido trovato. Questa funzione a volte crea confusione e spesso è meglio lasciarla disattivata, soprattutto quando si hanno tanti beacon attivi nelle vicinanze
		- una volta finita la scansione selezionare il beacon da programmare
		- l'app si connetterà e lo sbloccherà
		- premendo il tasto PROGRAM l'app legge il file di configurazione csv e scrive l'ID corrispondente sul beacon.
		- se la procedura va a buon fine sulla console dell'app si visualizzerà: "Beacon with name: **** programmed and ready to be released"
		- premendo DONE si ritorna alla schermata di scansione, l'indice del beacon da programmare ("Beacon No") viene automaticamente incrementato e si può procedere con un nuovo beacon
			
* https://github.com/smartcommunitylab/sco.climb.driverapp/tree/master/BeaconConfigApp